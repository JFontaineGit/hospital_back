"""initial migration

Revision ID: 021820c0820b
Revises: 
Create Date: 2025-04-09 01:47:18.327424

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '021820c0820b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('location_id', sa.String(length=36), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.PrimaryKeyConstraint('location_id'),
    sa.UniqueConstraint('location_id')
    )
    op.create_table('medicalschedules',
    sa.Column('medical_schedule_id', sa.String(length=36), nullable=False),
    sa.Column('day', sa.Enum('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='dayofweek'), nullable=False),
    sa.Column('time_medic', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('medical_schedule_id'),
    sa.UniqueConstraint('medical_schedule_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('departments',
    sa.Column('department_id', sa.String(length=36), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('location_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.location_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('department_id'),
    sa.UniqueConstraint('department_id')
    )
    op.create_table('specialties',
    sa.Column('specialty_id', sa.String(length=36), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('department_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.department_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('specialty_id'),
    sa.UniqueConstraint('specialty_id')
    )
    op.create_table('doctors',
    sa.Column('doctor_id', sa.String(length=36), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('dni', sa.Integer(), nullable=False),
    sa.Column('telephone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('speciality_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('medical_schedule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['medical_schedule_id'], ['medicalschedules.medical_schedule_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['speciality_id'], ['specialties.specialty_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('doctor_id'),
    sa.UniqueConstraint('doctor_id')
    )
    op.create_table('services',
    sa.Column('service_id', sa.String(length=36), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('specialty_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialties.specialty_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_id'),
    sa.UniqueConstraint('service_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('services')
    op.drop_table('doctors')
    op.drop_table('specialties')
    op.drop_table('departments')
    op.drop_table('user')
    op.drop_table('medicalschedules')
    op.drop_table('locations')
    # ### end Alembic commands ###
